[1mdiff --git a/Tests/calculate_chi_squared.asv b/Tests/calculate_chi_squared.asv[m
[1mindex c6a7e07..6158739 100644[m
[1m--- a/Tests/calculate_chi_squared.asv[m
[1m+++ b/Tests/calculate_chi_squared.asv[m
[36m@@ -1,64 +1,4 @@[m
[31m-AFkagome = spinw;[m
[31m-AFkagome.genlattice('lat_const',[6 6 10],'angled',[90 90 120],'spgr','P -3')[m
[31m-AFkagome.addatom('r',[1/2 0 0],'S', 1,'label','MCu1','color','r')[m
[31m-plot(AFkagome,'range',[2 2 1])[m
[31m-[m
[31m-AFkagome.gencoupling('maxDistance',7)[m
[31m-disp('Bonds:')[m
[31m-AFkagome.table('bond',[])[m
[31m-[m
[31m-AFkagome.addmatrix('label','J1','value',1.00,'color','r')[m
[31m-AFkagome.addmatrix('label','J2','value',0.11,'color','g')[m
[31m-AFkagome.addcoupling('mat','J1','bond',1)[m
[31m-AFkagome.addcoupling('mat','J2','bond',2)[m
[31m-plot(AFkagome,'range',[3 3 1])[m
[31m-[m
[31m-S0 = [1 -2 1; 2 -1 -1; 0 0 0];[m
[31m-AFkagome.genmagstr('mode','direct','k',[0 0 0],'n',[0 0 1],'unit','lu','S',S0);[m
[31m-disp('Magnetic structure:')[m
[31m-AFkagome.table('mag')[m
[31m-AFkagome.energy[m
[31m-[m
[31m-plot(AFkagome,'range',[3 3 1])[m
[31m-[m
[31m-afkPow = AFkagome.powspec(linspace(0,2.5,150),'Evect',linspace(0,3,250),...[m
[31m-    'nRand',1e3,'hermit',false,'imagChk',false);[m
[31m-[m
[31m-figure[m
[31m-sw_plotspec(afkPow,'axLim',[0 0.2])[m
[31m-[m
[31m-[first_index_in_range, last_index_in_range] = get_index_range(1.0, 0.1, afkPow.hklA);[m
[31m-[m
[31m-calculate_chi_squared_value(first_index_in_range, last_index_in_range, afkPow.swConv)[m
[31m-[m
[31m-function [first_index, last_index] = get_index_range(Q_centre, Q_range, Q_data)[m
[31m-    first_index_t = 1;[m
[31m-    last_index = 1;[m
[31m-[m
[31m-    Q_min = Q_centre - Q_range;[m
[31m-    for i = 1:size(Q_data, 2)[m
[31m-        if Q_data(i) >= Q_min[m
[31m-            first_index_t = i;[m
[31m-            break;[m
[31m-        end[m
[31m-    end[m
[31m-[m
[31m-    Q_max = Q_centre + Q_range;[m
[31m-    for i = first_index_t:size(Q_data, 2)[m
[31m-        if Q_data(i) >= Q_max[m
[31m-            last_index = i;[m
[31m-            break;[m
[31m-        end[m
[31m-    end[m
[31m-[m
[31m-    first_index = first_index_t;[m
[31m-end[m
[31m-[m
[31m-function chi_squared = calculate_chi_squared_value(first_index, last_index, data)[m
[31m-    total_energies = zeros(size(data, 1));[m
[31m-    for energy_bucket = 1:tota[m
[31m-        total_energies(energy_bucket-first_index+1) = sum(data(energy_bucket, :));[m
[31m-    end[m
[31m-[m
[31m-    chi_squared = sum(total_energies);[m
[32m+[m[32m% Calculates the chi squared value between two[m[41m [m
[32m+[m[32mfunction chi_squared = calculate_chi_squared(total_energies_1, total_energies_2)[m
[32m+[m[32m    chi_squared = sum(total_energies_1 - total_energies_2);[m
 end[m
\ No newline at end of file[m
[1mdiff --git a/Tests/calculate_chi_squared.m b/Tests/calculate_chi_squared.m[m
[1mindex 987cd1f..5c65c70 100644[m
[1m--- a/Tests/calculate_chi_squared.m[m
[1m+++ b/Tests/calculate_chi_squared.m[m
[36m@@ -1,3 +1,4 @@[m
[32m+[m[32m% Calculates the chi squared value between 2 lists of energies.[m
 function chi_squared = calculate_chi_squared(total_energies_1, total_energies_2)[m
     chi_squared = sum(total_energies_1 - total_energies_2);[m
 end[m
\ No newline at end of file[m
[1mdiff --git a/Tests/create_data_matrix.m b/Tests/create_data_matrix.m[m
[1mindex af6a4cf..56e8cac 100644[m
[1m--- a/Tests/create_data_matrix.m[m
[1m+++ b/Tests/create_data_matrix.m[m
[36m@@ -1,10 +1,11 @@[m
[31m-[m
[32m+[m[32m% Takes data in the form Q, E, S and converts it into a matrix with each[m
[32m+[m[32m% element at i,j equal to S in the ith energy bucket and jth Q bucket.[m
 function [data_matrix, Q_buckets, E_buckets] = create_data_matrix(data, n_energy_buckets)[m
     E_max = max(data(:, 2));[m
     E_buckets = linspace(0, E_max, n_energy_buckets);[m
     Q_buckets = zeros([1 ceil((data(end, 1) - data(1, 1)) * 100)]);[m
 [m
[31m-    data_matrix = zeros([n_energy_buckets size(Q_buckets, 1)]);[m
[32m+[m[32m    data_matrix = zeros([n_energy_buckets size(Q_buckets, 2)]);[m
 [m
     disp(size(data_matrix))[m
 [m
[36m@@ -21,10 +22,11 @@[m [mfunction [data_matrix, Q_buckets, E_buckets] = create_data_matrix(data, n_energy[m
             last_Q = Q;[m
         end[m
 [m
[31m-        E_index = floor((E / E_max) * (n_energy_buckets - 1)) + 1;[m
[32m+[m[32m        if E < 0.15[m
[32m+[m[32m            continue[m
[32m+[m[32m        end[m
[32m+[m
[32m+[m[32m        E_index = round((E / E_max) * (n_energy_buckets - 1)) + 1;[m
         data_matrix(E_index, Q_index) = S;[m
     end[m
[31m-[m
[31m-    %figure[m
[31m-    %heatmap(Q_index, E_index, data_matrix);[m
 end[m
\ No newline at end of file[m
[1mdiff --git a/Tests/get_energy_slices.m b/Tests/get_energy_slices.m[m
[1mindex 26420d0..ca9afa0 100644[m
[1m--- a/Tests/get_energy_slices.m[m
[1m+++ b/Tests/get_energy_slices.m[m
[36m@@ -1,3 +1,6 @@[m
[32m+[m
[32m+[m[32m% Takes in a matrix of S values and sums the energies for[m
[32m+[m[32m% each value of Q[m
 function total_energies = get_energy_slices(Q_data, data)[m
     slice_size = 0.1;[m
     Q_min = min(Q_data) + slice_size;[m
[36m@@ -8,7 +11,7 @@[m [mfunction total_energies = get_energy_slices(Q_data, data)[m
     Q_centre = Q_min + slice_size;[m
     for i = 1:floor((Q_max-Q_min) / slice_size)[m
         [first_index, last_index] = get_q_index_range(Q_centre, slice_size, Q_data);[m
[31m-        sliced_data = data(:, first_index:last_index);[m
[32m+[m[32m        sliced_data = data(2:end, first_index:last_index);[m
         total_energy = sum(sliced_data, 2);[m
 [m
         total_energies(i) = sum(total_energy);[m
[1mdiff --git a/Tests/kagome_lattice.m b/Tests/kagome_lattice.m[m
[1mnew file mode 100644[m
[1mindex 0000000..7af844c[m
[1m--- /dev/null[m
[1m+++ b/Tests/kagome_lattice.m[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32mAFkagome = spinw;[m
[32m+[m[32mAFkagome.genlattice('lat_const',[6 6 10],'angled',[90 90 120],'spgr','P -3')[m
[32m+[m[32mAFkagome.addatom('r',[1/2 0 0],'S', 1,'label','MCu1','color','r')[m
[32m+[m[32mplot(AFkagome,'range',[2 2 1])[m
\ No newline at end of file[m
[1mdiff --git a/Tests/main.asv b/Tests/main.asv[m
[1mnew file mode 100644[m
[1mindex 0000000..7e9d50c[m
[1m--- /dev/null[m
[1m+++ b/Tests/main.asv[m
[36m@@ -0,0 +1,67 @@[m
[32m+[m[32mAFkagome = spinw;[m
[32m+[m[32mAFkagome.genlattice('lat_const',[6 6 10],'angled',[90 90 120],'spgr','P -3')[m
[32m+[m[32mAFkagome.addatom('r',[1/2 0 0],'S', 1,'label','MCu1','color','r')[m
[32m+[m[32mplot(AFkagome,'range',[2 2 1])[m
[32m+[m
[32m+[m[32mAFkagome.gencoupling('maxDistance',7)[m
[32m+[m[32mdisp('Bonds:')[m
[32m+[m[32mAFkagome.table('bond',[])[m
[32m+[m
[32m+[m[32mAFkagome.addmatrix('label','J1','value',-3.8,'color','r')[m
[32m+[m[32mAFkagome.addmatrix('label','J2','value',0,'color','g')[m
[32m+[m[32mAFkagome.addmatrix('label','Jd','value',1.1,'color','b')[m
[32m+[m[32mAFkagome.addcoupling('mat','J1','bond',1)[m
[32m+[m[32mAFkagome.addcoupling('mat','J2','bond',2)[m
[32m+[m[32mAFkagome.addcoupling('mat','Jd','bond',4)[m
[32m+[m[32mplot(AFkagome,'range',[3 3 1])[m
[32m+[m
[32m+[m[32m%S0 = [1 -2 1; 2 -1 -1; 0 0 0];[m
[32m+[m[32m%AFkagome.genmagstr('mode','direct','k',[0 0 0],'n',[0 0 1],'unit','lu','S',S0);[m
[32m+[m[32m%AFkagome.genmagstr('mode','helical','k',[0 0 0],'n',[0 1 0],'S',[0 1 0]');[m
[32m+[m[32mmgIR=[  1   1   1[m
[32m+[m[32m        0   0   0[m
[32m+[m[32m        0   0   0];[m
[32m+[m[32mAFkagome.genmagstr('mode','direct','nExt',[1 1 1],'unit','lu','n',[0 0 1],'S',mgIR,'k',[0 0 0]);[m
[32m+[m[32mdisp('Magnetic structure:')[m
[32m+[m[32mAFkagome.table('mag')[m
[32m+[m[32mAFkagome.energy[m
[32m+[m
[32m+[m[32mplot(AFkagome,'range',[3 3 1])[m
[32m+[m
[32m+[m[32mafkPow = AFkagome.powspec([0.15:0.01:2.41] ,'Evect',linspace(0,3,250),...[m
[32m+[m[32m    'nRand',1e3,'hermit',true,'imagChk',false);[m
[32m+[m
[32m+[m[32mfigure[m
[32m+[m[32msw_plotspec(afkPow,'axLim',[0 0.2])[m
[32m+[m
[32m+[m[32mexperimental_data = readmatrix("../data/Haydeeite-Tsub-chiqw.dat");[m
[32m+[m
[32m+[m[32m[experimental_data_matrix, Q_buckets, E_buckets] = create_data_matrix(experimental_data, 150);[m
[32m+[m
[32m+[m[32mfigure[m
[32m+[m[32mtitle("Experimental Data")[m
[32m+[m[32mxlabel("Q (Ã…)")[m
[32m+[m[32mylabel("E (meV)")[m
[32m+[m[32msurf(Q_buckets, E_buckets, experimental_data_matrix, experimental_data_matrix)[m
[32m+[m[32mcolorbar.Label.String = "S(Q, Ï‰)";[m
[32m+[m[32m%set(gca, 'zscale', 'log')[m
[32m+[m
[32m+[m[32mtotal_energy_list_experimental = get_energy_slices(Q_buckets, experimental_data_matrix)[m
[32m+[m[32mtotal_energy_list_theory = get_energy_slices(afkPow.hklA, afkPow.swConv);[m
[32m+[m
[32m+[m[32mscale_factor = max(total_energy_list_experimental) / max(total_energy_list_theory)[m
[32m+[m[32mtotal_energy_list_theory = total_energy_list_theory * scale_factor[m
[32m+[m
[32m+[m[32mfigure[m
[32m+[m[32msubplot(2, 1, 1)[m
[32m+[m[32mtitle("Total energy for Q (experimental data)")[m
[32m+[m[32mxlabel("Q +/- 0.1 (Ã…)")[m
[32m+[m[32mylabel("Total Energy (meV)")[m
[32m+[m[32mplot(total_energy_list_experimental)[m
[32m+[m[32msubplot(2, 1, 2)[m
[32m+[m[32mplot(total_energy_list_theory)[m
[32m+[m[32mtitle("Total energy for Q (theoretical data)")[m
[32m+[m[32mxlabel("Q +/- 0.1 (Ã…)")[m
[32m+[m[32mylabel("Total Energy (meV)")[m
[32m+[m
[32m+[m[32mchi_squared = calculate_chi_squared(total_energy_list_experimental, total_energy_list_theory)[m
[1mdiff --git a/Tests/main.m b/Tests/main.m[m
[1mindex d9908b4..edbc7be 100644[m
[1m--- a/Tests/main.m[m
[1m+++ b/Tests/main.m[m
[36m@@ -7,14 +7,18 @@[m [mAFkagome.gencoupling('maxDistance',7)[m
 disp('Bonds:')[m
 AFkagome.table('bond',[])[m
 [m
[31m-AFkagome.addmatrix('label','J1','value',1.00,'color','r')[m
[31m-AFkagome.addmatrix('label','J2','value',0.11,'color','g')[m
[32m+[m[32mAFkagome.addmatrix('label','J1','value',-3.8,'color','r')[m
[32m+[m[32mAFkagome.addmatrix('label','J2','value',0,'color','g')[m
[32m+[m[32mAFkagome.addmatrix('label','Jd','value',1.1,'color','b')[m
 AFkagome.addcoupling('mat','J1','bond',1)[m
 AFkagome.addcoupling('mat','J2','bond',2)[m
[32m+[m[32mAFkagome.addcoupling('mat','Jd','bond',4)[m
 plot(AFkagome,'range',[3 3 1])[m
 [m
[31m-S0 = [1 -2 1; 2 -1 -1; 0 0 0];[m
[31m-AFkagome.genmagstr('mode','direct','k',[0 0 0],'n',[0 0 1],'unit','lu','S',S0);[m
[32m+[m[32mmgIR=[  1   1   1[m
[32m+[m[32m        0   0   0[m
[32m+[m[32m        0   0   0];[m
[32m+[m[32mAFkagome.genmagstr('mode','direct','nExt',[1 1 1],'unit','lu','n',[0 0 1],'S',mgIR,'k',[0 0 0]);[m
 disp('Magnetic structure:')[m
 AFkagome.table('mag')[m
 AFkagome.energy[m
[36m@@ -22,7 +26,7 @@[m [mAFkagome.energy[m
 plot(AFkagome,'range',[3 3 1])[m
 [m
 afkPow = AFkagome.powspec([0.15:0.01:2.41] ,'Evect',linspace(0,3,250),...[m
[31m-    'nRand',1e3,'hermit',false,'imagChk',false);[m
[32m+[m[32m    'nRand',1e3,'hermit',true,'imagChk',false);[m
 [m
 figure[m
 sw_plotspec(afkPow,'axLim',[0 0.2])[m
[36m@@ -31,6 +35,30 @@[m [mexperimental_data = readmatrix("../data/Haydeeite-Tsub-chiqw.dat");[m
 [m
 [experimental_data_matrix, Q_buckets, E_buckets] = create_data_matrix(experimental_data, 150);[m
 [m
[32m+[m[32mfigure[m
[32m+[m[32msurf(Q_buckets, E_buckets, experimental_data_matrix, experimental_data_matrix)[m
[32m+[m[32mtitle("Experimental Data")[m
[32m+[m[32mxlabel("Q (Ã…)")[m
[32m+[m[32mylabel("E (meV)")[m
[32m+[m[32mzlabel("S(Q, Ï‰)")[m
[32m+[m[32m%set(gca, 'zscale', 'log')[m
[32m+[m
 total_energy_list_experimental = get_energy_slices(Q_buckets, experimental_data_matrix)[m
[31m-total_energy_list_theory = get_energy_slices(afkPow.hklA, afkPow.swConv)[m
[32m+[m[32mtotal_energy_list_theory = get_energy_slices(afkPow.hklA, afkPow.swConv);[m
[32m+[m
[32m+[m[32mscale_factor = max(total_energy_list_experimental) / max(total_energy_list_theory)[m
[32m+[m[32mtotal_energy_list_theory = total_energy_list_theory * scale_factor[m
[32m+[m
[32m+[m[32mfigure[m
[32m+[m[32msubplot(2, 1, 1)[m
[32m+[m[32mplot(total_energy_list_experimental)[m
[32m+[m[32mtitle("Total energy for Q (experimental data)")[m
[32m+[m[32mxlabel("Q +/- 0.1 (Ã…)")[m
[32m+[m[32mylabel("Total Energy (meV)")[m
[32m+[m[32msubplot(2, 1, 2)[m
[32m+[m[32mplot(total_energy_list_theory)[m
[32m+[m[32mtitle("Total energy for Q (theoretical data)")[m
[32m+[m[32mxlabel("Q +/- 0.1 (Ã…)")[m
[32m+[m[32mylabel("Total Energy (meV)")[m
[32m+[m
 chi_squared = calculate_chi_squared(total_energy_list_experimental, total_energy_list_theory)[m
